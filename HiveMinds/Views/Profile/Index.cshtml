@using System.Text.RegularExpressions
@using HiveMinds.Common;
@using HiveMinds.Interfaces
@inject IUtility Utility;
@model HiveMinds.ViewModels.Pages.ProfilePageViewModel
@{
    ViewBag.Title = $"{Model.Profile.Username}";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card mb-4 border-0">
                <div class="card-header bg-dark text-white d-flex justify-content-between align-items-center">
                    <h3 class="mb-0">
                        @Model.Profile.Username
                        @if (Model.Profile.IsVerified)
                        {
                            <span class="badge bg-success ms-auto">Verified</span>
                        }
                    </h3>

                    @if (User.Identity is {IsAuthenticated: true} && User.Identity.Name == Model.Profile.Username)
                    {
                        <button type="button" class="btn btn-outline-light" onclick="window.open('/profile/edit')">
                            Edit Profile
                        </button>
                    }
                </div>
                <div class="card-body">
                    <div class="row mb-4">
                        <div class="col-md-3">
                            <img src="@Model.Profile.ProfilePicture" alt="Profile Picture" class="img-fluid rounded-circle">
                        </div>
                        <div class="col-md-9">
                            <div class="mb-4">
                                <h5 class="card-title">
                                    <i class="bi bi-info-circle"></i>
                                    Bio:
                                </h5>
                                <p class="card-text">@Model.Profile.Bio</p>
                            </div>

                            <div class="mb-4">
                                <h5 class="card-title">
                                    <i class="bi bi-calendar"></i>
                                    Joined:
                                </h5>
                                <p class="card-text">@Model.Profile.Joined.ToString("MMMM d, yyyy")</p>
                            </div>
                        </div>

                    </div>

                    @if (User.Identity is {IsAuthenticated: true} && User.Identity.Name == Model.Profile.Username && await Utility.GetUserVerificationStatus(Model.Profile.Username) == VerificationStatus.Pending)
                    {
                        <hr class="mb-4"/>
                        <span class="text-muted">Verification Request Pending</span>
                    }
                </div>
            </div>


            <ul class="nav nav-tabs justify-content-center">
                <li class="nav-item">
                    <a class="nav-link active" id="thoughts-tab" data-toggle="tab" href="#thoughts" role="tab" aria-controls="thoughts" aria-selected="true">Thoughts</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="interactions-tab" data-toggle="tab" href="#interactions" role="tab" aria-controls="interactions" aria-selected="false">Interactions</a>
                </li>
            </ul>
            <div class="tab-content">
                <!-- Thoughts Tab Content -->
                <div class="tab-pane fade show active" id="thoughts" role="tabpanel" aria-labelledby="thoughts-tab">
                    <div class="list-group">
                        @if (Model.Profile.Thoughts == null || Model.Profile.Thoughts.Count == 0)
                        {
                            <div class="alert alert-info" role="alert">
                                <i>There are no thoughts to display.</i>
                            </div>
                        }
                        else
                        {
                            @foreach (var thought in Model.Profile.Thoughts)
                            {
                                <div class="list-group-item mb-4 p-4 border rounded shadow-sm">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <h5 class="mb-0">
                                            <a href="~/profile/@thought.Author.Username" target="_blank" class="text-decoration-none">
                                                @@@thought.Author.Username
                                                @if (Model.Profile.IsVerified)
                                                {
                                                    <i class="bi bi-patch-check-fill text-success me-1"></i>
                                                }
                                            </a>
                                        </h5>
                                        <small class="text-muted">@thought.CreatedAt</small>
                                    </div>
                                    @{
                                        const string pattern = @"(@\w+)";
                                        var content = thought.Content;
                                        var parts = Regex.Split(content, pattern);
                                    }

                                    <p class="my-3">
                                        @foreach (var i in parts)
                                        {
                                            if (Regex.IsMatch(i, pattern))
                                            {
                                                var username = i[1..];
                                                <a href="~/profile/@username" target="_blank" class="text-decoration-none">@i</a>
                                            }
                                            else
                                            {
                                                <span>@i</span>
                                            }
                                        }
                                    </p>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="likes-replies">
                                            <span class="me-3">
                                                <i class="bi bi-heart"></i> <span class="badge bg-secondary">@thought.Likes?.Count</span>
                                            </span>
                                            <span>
                                                <i class="bi bi-reply"></i> <span class="badge bg-secondary">@thought.Replies?.Count</span>
                                            </span>
                                        </div>
                                        @if (User.Identity is {IsAuthenticated: true})
                                        {
                                            <div class="mt-3">
                                                <form method="post">
                                                    @if (Model.CurrentUser.Likes?.FirstOrDefault(x => x.ThoughtId == thought.Id) != null)
                                                    {
                                                        <button type="submit" class="btn btn-sm btn-outline-primary me-2" asp-action="Unlike" asp-controller="Thought" asp-route-id="@thought.Id">
                                                            Unlike
                                                        </button>
                                                    }
                                                    else
                                                    {
                                                        <button type="submit" class="btn btn-sm btn-outline-primary me-2" asp-action="Like" asp-controller="Thought" asp-route-id="@thought.Id">
                                                            Like
                                                        </button>
                                                    }

                                                    <button type="button" onclick="window.open('/thought/@thought.Id')" class="btn btn-sm btn-outline-primary">
                                                        Reply
                                                    </button>
                                                    <button type="button" asp-action="Report" asp-controller="Thought" asp-route-id="@thought.Id" class="btn btn-sm btn-outline-danger">
                                                        Report
                                                    </button>
                                                </form>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>

                <!-- Interactions Tab Content -->
                <div class="tab-pane fade" id="interactions" role="tabpanel" aria-labelledby="interactions-tab">
                    <div class="list-group">
                        <div class="alert alert-info" role="alert">
                            <i>Not yet implemented.</i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>